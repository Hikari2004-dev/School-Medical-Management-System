const axios = require('axios');

const API_BASE_URL = 'http://localhost:5000/api';

// Test l·∫•y h√¨nh ·∫£nh t·ª´ tin t·ª©c
async function testImageExtraction() {
    console.log('üñºÔ∏è  Testing Image Extraction from News...\n');

    try {
        // Test 1: L·∫•y danh s√°ch tin t·ª©c v√† ki·ªÉm tra h√¨nh ·∫£nh
        console.log('üì∞ Test 1: Checking images in news list');
        const newsResponse = await axios.get(`${API_BASE_URL}/news?limit=5`);

        if (newsResponse.data.success) {
            console.log(`‚úÖ Successfully got ${newsResponse.data.data.length} articles`);

            newsResponse.data.data.forEach((article, index) => {
                console.log(`\nüìÑ Article ${index + 1}:`);
                console.log(`   Title: ${article.title}`);
                console.log(`   Image: ${article.image}`);
                console.log(`   Image type: ${article.image.includes('unsplash') ? 'Real' : 'Generated'}`);
                console.log(`   Category: ${article.category}`);
            });
        }

        console.log('\n');

        // Test 2: L·∫•y chi ti·∫øt b√†i vi·∫øt v√† ki·ªÉm tra h√¨nh ·∫£nh
        console.log('üìÑ Test 2: Checking images in article details');
        const detailResponse = await axios.get(`${API_BASE_URL}/news/1`);

        if (detailResponse.data.success) {
            const article = detailResponse.data.data;
            console.log('‚úÖ Successfully got article details');
            console.log(`   Title: ${article.title}`);
            console.log(`   Main Image: ${article.image}`);
            console.log(`   Content has images: ${article.content.includes('<img') ? 'Yes' : 'No'}`);

            // ƒê·∫øm s·ªë l∆∞·ª£ng h√¨nh ·∫£nh trong n·ªôi dung
            const imageCount = (article.content.match(/<img/g) || []).length;
            console.log(`   Images in content: ${imageCount}`);
        }

        console.log('\n');

        // Test 3: Ki·ªÉm tra fallback images
        console.log('üîÑ Test 3: Checking fallback article images');
        const fallbackResponse = await axios.get(`${API_BASE_URL}/news/fallback-1-2`);

        if (fallbackResponse.data.success) {
            const article = fallbackResponse.data.data;
            console.log('‚úÖ Successfully got fallback article');
            console.log(`   Title: ${article.title}`);
            console.log(`   Image: ${article.image}`);
            console.log(`   Image type: ${article.image.includes('unsplash') ? 'Real' : 'Generated'}`);
        }

        console.log('\n');

        // Test 4: Ki·ªÉm tra API health
        console.log('üè• Test 4: API Health Check');
        const healthResponse = await axios.get(`${API_BASE_URL}/health`);

        if (healthResponse.data.status === 'OK') {
            console.log('‚úÖ API is healthy and running');
            console.log(`   Message: ${healthResponse.data.message}`);
            console.log(`   Timestamp: ${healthResponse.data.timestamp}`);
        }

    } catch (error) {
        console.log(`‚ùå Test failed: ${error.message}`);

        if (error.code === 'ECONNREFUSED') {
            console.log('üìå Please make sure the server is running:');
            console.log('   node src/server/ServerNew.js');
        }
    }
}

// Test h√¨nh ·∫£nh placeholder
function testPlaceholderImages() {
    console.log('\nüé® Testing Placeholder Image Generation');

    const categories = ['S·ª©c kh·ªèe', 'Y t·∫ø', 'Dinh d∆∞·ª°ng', 'Vaccine', 'M·∫Øt'];
    const testTitles = [
        'Ch∆∞∆°ng tr√¨nh ti√™m vaccine COVID-19',
        'H∆∞·ªõng d·∫´n dinh d∆∞·ª°ng m√πa thi',
        'Ph√≤ng ch·ªëng c·∫≠n th·ªã h·ªçc sinh',
        'Kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥',
        'TƒÉng c∆∞·ªùng mi·ªÖn d·ªãch tr·∫ª em'
    ];

    categories.forEach((category, index) => {
        const title = testTitles[index] || 'Tin t·ª©c y t·∫ø';
        console.log(`\nüì∑ Category: ${category}`);
        console.log(`   Sample title: ${title}`);
        console.log(`   Expected image: Medical/health related image from Unsplash`);
    });
}

// Ki·ªÉm tra server tr∆∞·ªõc khi test
async function checkServer() {
    try {
        await axios.get(`${API_BASE_URL}/health`, { timeout: 5000 });
        console.log('‚úÖ Server is running at http://localhost:5000\n');
        return true;
    } catch (error) {
        console.log('‚ùå Server is not running or not accessible');
        console.log('üìå Please start the server first:');
        console.log('   cd my-app');
        console.log('   node src/server/ServerNew.js\n');
        return false;
    }
}

// Ch·∫°y t·∫•t c·∫£ tests
async function runTests() {
    console.log('üöÄ Testing News Image System');
    console.log('===============================\n');

    const serverRunning = await checkServer();

    if (serverRunning) {
        await testImageExtraction();
    }

    testPlaceholderImages();

    console.log('\nüéâ Image testing completed!');
    console.log('\nüìñ What to expect:');
    console.log('   - Real medical images from Unsplash instead of placeholders');
    console.log('   - Images in article content preserved and styled');
    console.log('   - Fallback to quality medical images when scraping fails');
    console.log('   - Consistent image sizing and cropping');
}

runTests();
