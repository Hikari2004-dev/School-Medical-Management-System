import { useState, useEffect } from "react";
import "./vaccineForm.css";
import Header from '../../components/Header/Header';
import Footer from '../../components/Footer/Footer';

const VaccineApp = () => {
    const [personalInfo, setPersonalInfo] = useState({
        studentName: "",
        studentClass: "",
        birthDate: "2025-06-11",
        studentId: "",
        parentName: "",
        phoneNumber: "",
        address: "",
        school: "",
    });

    const [vaccineRecords, setVaccineRecords] = useState([]);
    const [vaccineFormData, setVaccineFormData] = useState({
        vaccineName: "",
        vaccineDate: "2025-06-11",
        batchNumber: "",
        doseNumber: "M≈©i 1",
    });
    const [isChecked, setIsChecked] = useState(false);

    // Load data from localStorage on component mount
    useEffect(() => {
        const savedPersonalInfo = localStorage.getItem("schomed_personal_info");
        const savedVaccineRecords = localStorage.getItem("schomed_vaccine_records");

        if (savedPersonalInfo) {
            setPersonalInfo(JSON.parse(savedPersonalInfo));
        }
        if (savedVaccineRecords) {
            setVaccineRecords(JSON.parse(savedVaccineRecords));
        }
    }, []);

    // Save data to localStorage whenever state changes
    useEffect(() => {
        localStorage.setItem("schomed_personal_info", JSON.stringify(personalInfo));
    }, [personalInfo]);

    useEffect(() => {
        localStorage.setItem(
            "schomed_vaccine_records",
            JSON.stringify(vaccineRecords),
        );
    }, [vaccineRecords]);

    const handlePersonalInfoChange = (field, value) => {
        setPersonalInfo((prev) => ({
            ...prev,
            [field]: value,
        }));
    };

    const handleAddVaccine = () => {
        if (
            vaccineFormData.vaccineName &&
            vaccineFormData.batchNumber &&
            isChecked
        ) {
            const newRecord = {
                id: Date.now().toString(),
                ...vaccineFormData,
                vaccineCenter: "",
                doctorName: "",
                notes: "",
            };

            setVaccineRecords((prev) => [...prev, newRecord]);
            setVaccineFormData({
                vaccineName: "",
                vaccineDate: "2025-06-11",
                batchNumber: "",
                doseNumber: "M≈©i 1",
            });
            setIsChecked(false);

            // Show success message (you can replace with your toast implementation)
            alert("ƒê√£ th√™m vaccine v√†o danh s√°ch");
        }
    };

    const handleDeleteRecord = (id) => {
        setVaccineRecords((prev) => prev.filter((record) => record.id !== id));
        alert("ƒê√£ x√≥a vaccine kh·ªèi danh s√°ch");
    };

    const handleSubmit = () => {
        alert("ƒê√£ n·ªôp khai b√°o l√™n h·ªá th·ªëng");
    };

    const handleReset = () => {
        setPersonalInfo({
            studentName: "",
            studentClass: "",
            birthDate: "2025-06-11",
            studentId: "",
            parentName: "",
            phoneNumber: "",
            address: "",
            school: "",
        });
        setVaccineRecords([]);
        setVaccineFormData({
            vaccineName: "",
            vaccineDate: "2025-06-11",
            batchNumber: "",
            doseNumber: "M≈©i 1",
        });
        setIsChecked(false);
        localStorage.removeItem("schomed_personal_info");
        localStorage.removeItem("schomed_vaccine_records");

        alert("ƒê√£ x√≥a to√†n b·ªô d·ªØ li·ªáu");
    };

    const handleExport = () => {
        // Create CSV content
        let csvContent = "data:text/csv;charset=utf-8,";
        csvContent += "T√™n Vaccine,Ng√†y ti√™m,S·ªë l√¥,M≈©i ti√™m,N∆°i ti√™m,B√°c sƒ©,Ghi ch√∫\n";

        vaccineRecords.forEach(record => {
            csvContent += `${record.vaccineName},${record.vaccineDate},${record.batchNumber},${record.doseNumber},${record.vaccineCenter || ''},${record.doctorName || ''},${record.notes || ''}\n`;
        });

        // Create download link
        const encodedUri = encodeURI(csvContent);
        const link = document.createElement("a");
        link.setAttribute("href", encodedUri);
        link.setAttribute("download", "vaccine_records.csv");
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    };

    return (
        <div className="vaccine-app">
            {/* Header */}
            <Header />

            {/* Main Content */}
            <main className="main-content">
                {/* Hero Content Inside */}
                <div className="hero-content">
                    <div className="hero-text">
                        <h1 className="hero-title">
                            KHAI B√ÅO L·ªäCH S·ª¨ TI√äM VACCINE H·ªåC SINH
                        </h1>
                        <p className="hero-subtitle">
                            C·∫≠p nh·∫≠t ƒë·∫ßy ƒë·ªß th√¥ng tin c√°c m≈©i ti√™m ƒë·ªÉ ƒë·∫£m b·∫£o s·ª©c kh·ªèe cho h·ªçc sinh
                        </p>
                    </div>
                    <div className="decorative-circle-1"></div>
                    <div className="decorative-circle-2"></div>
                </div>

                {/* Personal Information Section */}
                <section className="personal-info-section">
                    <div className="section-header">
                        <div className="section-icon">üë®‚Äçüéì</div>
                        <h2 className="section-title">TH√îNG TIN C√Å NH√ÇN</h2>
                    </div>
                    <div className="section-divider"></div>

                    {/* Form Fields Row 1 */}
                    <div className="form-row">
                        <div className="form-field">
                            <div className="field-label">
                                <img
                                    src="https://cdn.builder.io/api/v1/image/assets/TEMP/d248603585290f5fa82e602a36a97693c9502090?width=64"
                                    alt="Person"
                                    className="field-icon"
                                />
                                <label>H·ªç v√† t√™n h·ªçc sinh</label>
                            </div>
                            <div className="input-wrapper">
                                <input
                                    placeholder="Nh·∫≠p h·ªç v√† t√™n ƒë·∫ßy ƒë·ªß"
                                    value={personalInfo.studentName}
                                    onChange={(e) =>
                                        handlePersonalInfoChange("studentName", e.target.value)
                                    }
                                    className="form-input"
                                />
                            </div>
                        </div>

                        <div className="form-field">
                            <div className="field-label">
                                <img
                                    src="https://cdn.builder.io/api/v1/image/assets/TEMP/707124960a0a5bd7ba5a04135e5398549610d91a?width=64"
                                    alt="School"
                                    className="field-icon"
                                />
                                <label>L·ªõp</label>
                            </div>
                            <div className="input-wrapper">
                                <input
                                    placeholder="V√≠ d·ª•: 5A"
                                    value={personalInfo.studentClass}
                                    onChange={(e) =>
                                        handlePersonalInfoChange("studentClass", e.target.value)
                                    }
                                    className="form-input"
                                />
                            </div>
                        </div>
                    </div>

                    {/* Form Fields Row 2 */}
                    <div className="form-row">
                        <div className="form-field">
                            <img
                                src="https://cdn.builder.io/api/v1/image/assets/TEMP/ee5567ffa09de3878e11a1998ce77be49e46ea30?width=64"
                                alt="Calendar"
                                className="calendar-icon"
                            />
                            <label className="field-label-simple">Ng√†y sinh</label>
                            <div className="input-wrapper date-wrapper">
                                <input
                                    type="date"
                                    value={personalInfo.birthDate}
                                    onChange={(e) =>
                                        handlePersonalInfoChange("birthDate", e.target.value)
                                    }
                                    className="form-input date-input"
                                />

                            </div>
                        </div>

                        <div className="form-field">
                            <div className="field-label">
                                <img
                                    src="https://cdn.builder.io/api/v1/image/assets/TEMP/446903e0d4237bedba5684d26a2e09ae630b47d6?width=64"
                                    alt="Student ID"
                                    className="field-icon"
                                />
                                <label>M√£ h·ªçc sinh</label>
                            </div>
                            <div className="input-wrapper">
                                <input
                                    placeholder="Nh·∫≠p m√£ h·ªçc sinh"
                                    value={personalInfo.studentId}
                                    onChange={(e) =>
                                        handlePersonalInfoChange("studentId", e.target.value)
                                    }
                                    className="form-input"
                                />
                            </div>
                        </div>
                    </div>
                </section>

                {/* Vaccine Declaration Section */}
                <section className="vaccine-declaration-section">
                    <h2 className="section-title">K√ä KHAI VACCINE ƒê√É TI√äM</h2>
                    <div className="section-divider"></div>

                    {/* Vaccine Form Row 1 */}
                    <div className="form-row">
                        <div className="form-field">
                            <label className="field-label-simple">T√™n vaccine</label>
                            <div className="input-wrapper">
                                <input
                                    value={vaccineFormData.vaccineName}
                                    onChange={(e) =>
                                        setVaccineFormData((prev) => ({
                                            ...prev,
                                            vaccineName: e.target.value,
                                        }))
                                    }
                                    className="form-input"
                                />
                            </div>
                        </div>

                        <div className="form-field">
                            <label className="field-label-simple">Ng√†y ti√™m</label>
                            <div className="input-wrapper">
                                <input
                                    type="date"
                                    value={vaccineFormData.vaccineDate}
                                    onChange={(e) =>
                                        setVaccineFormData((prev) => ({
                                            ...prev,
                                            vaccineDate: e.target.value,
                                        }))
                                    }
                                    className="form-input"
                                />
                            </div>
                        </div>
                    </div>

                    {/* Vaccine Form Row 2 */}
                    <div className="form-row">
                        <div className="form-field">
                            <label className="field-label-simple">S·ªë l√¥ vaccine</label>
                            <div className="input-wrapper">
                                <input
                                    placeholder="Nh·∫≠p s·ªë l√¥ (n·∫øu c√≥)"
                                    value={vaccineFormData.batchNumber}
                                    onChange={(e) =>
                                        setVaccineFormData((prev) => ({
                                            ...prev,
                                            batchNumber: e.target.value,
                                        }))
                                    }
                                    className="form-input"
                                />
                            </div>
                        </div>

                        <div className="form-field">
                            <label className="field-label-simple">S·ªë m≈©i ti√™m</label>
                            <div className="input-wrapper">
                                <input
                                    value={vaccineFormData.doseNumber}
                                    onChange={(e) =>
                                        setVaccineFormData((prev) => ({
                                            ...prev,
                                            doseNumber: e.target.value,
                                        }))
                                    }
                                    className="form-input"
                                />
                            </div>
                        </div>
                    </div>

                    {/* Checkbox */}
                    <div className="checkbox-section">
                        <input
                            type="checkbox"
                            checked={isChecked}
                            onChange={(e) => setIsChecked(e.target.checked)}
                            className="checkbox-input"
                        />
                        <span className="checkbox-label">
                            T√¥i x√°c nh·∫≠n th√¥ng tin vaccine tr√™n l√† ch√≠nh x√°c v√† ƒë√£ ƒë∆∞·ª£c ph·ª•
                            huynh ki·ªÉm tra
                        </span>
                    </div>

                    {/* Add Vaccine Button */}
                    <div className="add-button-container">
                        <button onClick={handleAddVaccine} className="add-vaccine-button">
                            <div className="plus-icon">
                                <div className="plus-vertical"></div>
                                <div className="plus-horizontal"></div>
                            </div>
                            TH√äM VACCINE V√ÄO DANH S√ÅCH
                        </button>
                    </div>
                </section>

                {/* Vaccine Records Table */}
                <section className="vaccine-records-section">
                    <div className="records-header">
                        <h2 className="section-title">DANH S√ÅCH VACCINE ƒê√É K√ä KHAI</h2>
                        {vaccineRecords.length > 0 && (
                            <button onClick={handleExport} className="export-button">
                                üì• Xu·∫•t danh s√°ch
                            </button>
                        )}
                    </div>
                    <div className="section-divider"></div>

                    {/* Table Header */}
                    <div className="table-header">
                        <div className="table-cell">T√™n Vaccine</div>
                        <div className="table-cell">Ng√†y ti√™m</div>
                        <div className="table-cell">S·ªë m≈©i</div>
                        <div className="table-cell">S·ªë l√¥</div>
                        <div className="table-cell">T√¨nh tr·∫°ng</div>
                        <div className="table-cell">Ghi ch√∫</div>
                        <div className="table-cell">X√°c nh·∫≠n</div>
                    </div>

                    {/* Table Content */}
                    <div className="table-content">
                        {vaccineRecords.length === 0 ? (
                            <div className="empty-state">
                                <div className="empty-icon">üíâ</div>
                                <div className="empty-title">
                                    Ch∆∞a c√≥ vaccine n√†o ƒë∆∞·ª£c th√™m v√†o
                                </div>
                                <div className="empty-subtitle">
                                    Vui l√≤ng th√™m vaccine b·∫±ng n√∫t "TH√äM VACCINE V√ÄO DANH S√ÅCH"
                                    b√™n tr√™n
                                </div>
                            </div>
                        ) : (
                            <div className="table-rows">
                                {vaccineRecords.map((record, index) => (
                                    <div key={record.id} className="table-row">
                                        <div className="table-cell">{record.vaccineName}</div>
                                        <div className="table-cell">{record.vaccineDate}</div>
                                        <div className="table-cell">{record.doseNumber}</div>
                                        <div className="table-cell">{record.batchNumber}</div>
                                        <div className="table-cell">ƒê√£ ti√™m</div>
                                        <div className="table-cell">-</div>
                                        <div className="table-cell">
                                            <button
                                                onClick={() => handleDeleteRecord(record.id)}
                                                className="delete-button"
                                            >
                                                X√≥a
                                            </button>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        )}
                    </div>
                </section>

                {/* Action Buttons */}
                <section className="action-buttons-section">
                    <button onClick={handleSubmit} className="submit-button">
                        HO√ÄN TH√ÄNH KHAI B√ÅO
                    </button>
                    <button onClick={handleReset} className="reset-button">
                        L√ÄM M·ªöI BI·ªÇU M·∫™U
                    </button>
                </section>
            </main>

            {/* Footer */}
            <Footer />
            
        </div>
    );
};

export default VaccineApp;
